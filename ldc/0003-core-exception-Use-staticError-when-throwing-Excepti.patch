From 56609839f488728a8414d075ce8286e2255de73d Mon Sep 17 00:00:00 2001
From: Geod24 <pro.mathias.lang@gmail.com>
Date: Tue, 18 May 2021 09:05:01 +0900
Subject: [PATCH] core/exception: Use staticError when throwing Exception

Otherwise, an assert failure in a dtor (or anything GC-called) result in an InvalidMemoryOperationError.
---
 runtime/druntime/src/core/exception.d    |  4 ++--
 test/allocations/Makefile                |  7 ++++++-
 test/allocations/src/alloc_from_assert.d | 25 ++++++++++++++++++++++++
 3 files changed, 33 insertions(+), 3 deletions(-)
 create mode 100644 test/allocations/src/alloc_from_assert.d

diff --git a/runtime/druntime/src/core/exception.d b/runtime/druntime/src/core/exception.d
index 08d5eac7d..d96797d3a 100644
--- a/runtime/druntime/src/core/exception.d
+++ b/runtime/druntime/src/core/exception.d
@@ -426,7 +426,7 @@ alias AssertHandler = void function(string file, size_t line, string msg) nothro
 extern (C) void onAssertError( string file = __FILE__, size_t line = __LINE__ ) nothrow
 {
     if ( _assertHandler is null )
-        throw new AssertError( file, line );
+        throw staticError!AssertError(file, line);
     _assertHandler( file, line, null);
 }
 
@@ -444,7 +444,7 @@ extern (C) void onAssertError( string file = __FILE__, size_t line = __LINE__ )
 extern (C) void onAssertErrorMsg( string file, size_t line, string msg ) nothrow
 {
     if ( _assertHandler is null )
-        throw new AssertError( msg, file, line );
+        throw staticError!AssertError(msg, file, line);
     _assertHandler( file, line, msg );
 }
 
diff --git a/runtime/druntime/test/allocations/Makefile b/runtime/druntime/test/allocations/Makefile
index 204b12b18..db8494a48 100644
--- a/runtime/druntime/test/allocations/Makefile
+++ b/runtime/druntime/test/allocations/Makefile
@@ -1,6 +1,6 @@
 include ../common.mak
 
-TESTS:=overflow_from_zero overflow_from_existing
+TESTS:=overflow_from_zero overflow_from_existing alloc_from_assert
 
 DIFF:=diff
 SED:=sed
@@ -8,6 +8,11 @@ SED:=sed
 .PHONY: all clean
 all: $(addprefix $(ROOT)/,$(addsuffix .done,$(TESTS)))
 
+$(ROOT)/alloc_from_assert.done: $(ROOT)/alloc_from_assert
+	@echo Testing $*
+	$(QUIET)$(TIMELIMIT)$(ROOT)/alloc_from_assert $(RUN_ARGS)
+	@touch $@
+
 $(ROOT)/overflow_from_zero.done: STDERR_EXP="Memory allocation failed"
 $(ROOT)/overflow_from_existing.done: STDERR_EXP="Memory allocation failed"
 $(ROOT)/%.done: $(ROOT)/%
diff --git a/runtime/druntime/test/allocations/src/alloc_from_assert.d b/runtime/druntime/test/allocations/src/alloc_from_assert.d
new file mode 100644
index 000000000..a377cd913
--- /dev/null
+++ b/runtime/druntime/test/allocations/src/alloc_from_assert.d
@@ -0,0 +1,25 @@
+import core.exception;
+import core.memory;
+
+class FailFinalization
+{
+    int magic;
+
+    ~this () @nogc nothrow
+    {
+        try
+            assert(this.magic == 42);
+        catch (AssertError) {}
+    }
+}
+
+void foo ()
+{
+    auto dangling = new FailFinalization();
+}
+
+void main()
+{
+    foo();
+    GC.collect();
+}
-- 

